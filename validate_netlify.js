#!/usr/bin/env node

// Script de validation finale pour le d√©ploiement Netlify
console.log('üéØ Validation finale du projet EVIMERIA pour Netlify\n');
console.log('=' .repeat(60));

const fs = require('fs');
const path = require('path');

// V√©rification des fichiers essentiels
const requiredFiles = [
  'netlify.toml',
  'package.json',
  'netlify/functions/api.js',
  'frontend/package.json',
  'frontend/dist/index.html',
  'NETLIFY_DEPLOYMENT.md'
];

const optionalFiles = [
  'frontend/dist/assets',
  'README.md'
];

console.log('üìÅ V√©rification des fichiers...\n');

requiredFiles.forEach(file => {
  if (fs.existsSync(file)) {
    console.log(`‚úÖ ${file}`);
  } else {
    console.log(`‚ùå ${file} - MANQUANT !`);
  }
});

optionalFiles.forEach(file => {
  if (fs.existsSync(file)) {
    console.log(`‚úÖ ${file} (optionnel)`);
  } else {
    console.log(`‚ö†Ô∏è  ${file} (optionnel) - non trouv√©`);
  }
});

// V√©rification du contenu netlify.toml
console.log('\nüìã V√©rification netlify.toml...');
try {
  const netlifyConfig = fs.readFileSync('netlify.toml', 'utf8');
  
  if (netlifyConfig.includes('functions = "netlify/functions"')) {
    console.log('‚úÖ Configuration des fonctions OK');
  } else {
    console.log('‚ùå Configuration des fonctions manquante');
  }
  
  if (netlifyConfig.includes('/.netlify/functions/api')) {
    console.log('‚úÖ Redirection API configur√©e');
  } else {
    console.log('‚ùå Redirection API manquante');
  }
  
  if (netlifyConfig.includes('publish = "frontend/dist"') || netlifyConfig.includes('frontend/dist')) {
    console.log('‚úÖ Dossier de publication configur√©');
  } else {
    console.log('‚ùå Dossier de publication manquant');
  }
} catch (error) {
  console.log('‚ùå Erreur lecture netlify.toml:', error.message);
}

// V√©rification du package.json racine
console.log('\nüì¶ V√©rification package.json...');
try {
  const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));
  
  if (packageJson.dependencies && packageJson.dependencies['@supabase/supabase-js']) {
    console.log('‚úÖ D√©pendance Supabase pr√©sente');
  } else {
    console.log('‚ùå D√©pendance Supabase manquante');
  }
} catch (error) {
  console.log('‚ùå Erreur lecture package.json:', error.message);
}

// V√©rification de l'API function
console.log('\nüîß V√©rification fonction API...');
try {
  const apiFunction = fs.readFileSync('netlify/functions/api.js', 'utf8');
  
  if (apiFunction.includes('supabase')) {
    console.log('‚úÖ Configuration Supabase dans l\'API');
  } else {
    console.log('‚ùå Configuration Supabase manquante dans l\'API');
  }
  
  if (apiFunction.includes('products_product')) {
    console.log('‚úÖ Endpoint produits configur√©');
  } else {
    console.log('‚ùå Endpoint produits manquant');
  }
  
  if (apiFunction.includes('products_category')) {
    console.log('‚úÖ Endpoint cat√©gories configur√©');
  } else {
    console.log('‚ùå Endpoint cat√©gories manquant');
  }
} catch (error) {
  console.log('‚ùå Erreur lecture api.js:', error.message);
}

console.log('\n' + '=' .repeat(60));
console.log('üöÄ Instructions de d√©ploiement Netlify:');
console.log('\n1. Pousser le code vers GitHub:');
console.log('   git add .');
console.log('   git commit -m "Configuration Netlify Functions"');
console.log('   git push origin main');

console.log('\n2. Sur Netlify.com:');
console.log('   - Connecter le d√©p√¥t GitHub');
console.log('   - Build settings: automatiquement d√©tect√©es');
console.log('   - Configurer les variables d\'environnement:');
console.log('     * SUPABASE_URL=https://jbxyihenvutqwkknlelh.supabase.co');
console.log('     * SUPABASE_ANON_KEY=(votre cl√© anon)');
console.log('     * VITE_API_URL=/.netlify/functions');

console.log('\n3. D√©ployer:');
console.log('   - Le d√©ploiement se fait automatiquement');
console.log('   - URL finale: https://votre-site.netlify.app');

console.log('\nüîó Base de donn√©es:');
console.log('   ‚úÖ Supabase PostgreSQL configur√©e');
console.log('   ‚úÖ Admin user cr√©√© (mpigajesse23@gmail.com)');
console.log('   ‚úÖ Migrations appliqu√©es');

console.log('\nüìä √âtat du projet:');
console.log('   ‚úÖ Frontend React + Vite');
console.log('   ‚úÖ API Serverless Netlify Functions');
console.log('   ‚úÖ Base de donn√©es Supabase');
console.log('   ‚úÖ Stockage Cloudinary');
console.log('   ‚úÖ Pr√™t pour d√©ploiement !');

console.log('\n' + '=' .repeat(60));
console.log('‚ú® Projet EVIMERIA optimis√© pour Netlify ‚ú®');
